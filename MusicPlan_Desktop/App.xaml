<Application x:Class="MusicPlan_Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
             xmlns:resources="clr-namespace:MusicPlan_Desktop.Resources">
    <Application.Resources>
        <Style TargetType="DataGrid">
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="AutoGenerateColumns" Value="False" />
        </Style>
        
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected, Mode=TwoWay}" Content="{Binding DisplayName}">
                        </CheckBox>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0.0"/>
            <GradientStop Color="LightGray" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Gainsboro" Offset="0.0"/>
            <GradientStop Color="DarkGray" Offset="1.0"/>
        </LinearGradientBrush>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="FontFamily" Value="Verdana" />
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Height" Value="23"/>
        </Style>


        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="23"/>
        </Style>

        <Style x:Key="ListViewSelectedItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="White" Margin="0">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightSteelBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate >
                        <TextBlock Text="{Binding}"
                                   FontFamily="Georgia" FontStyle="Italic" FontWeight="Heavy"
                                   TextDecorations="Underline" Foreground="Black" HorizontalAlignment="Stretch" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupBoxSchedule" TargetType="{x:Type GroupBox}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate >
                        <TextBlock Text="{Binding StringFormat={x:Static resources:ApplicationResources.ScheduleForSpecificYear}}"
                                   FontFamily="Georgia" FontStyle="Italic" FontWeight="Heavy"
                                   TextDecorations="Underline" Foreground="Black" HorizontalAlignment="Stretch" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontFamily="Georgia" FontStyle="Italic" FontWeight="Heavy" TextDecorations="Underline" Foreground="Black" HorizontalAlignment="Stretch" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="MistyRose"/>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

    </Application.Resources>

</Application>
